// ----------------------------------------------------------------------------
// Project Euler - Problem 2
// https://projecteuler.net/problem=2
//
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
//   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.
// ----------------------------------------------------------------------------

pub fn solve() -> u32 {
  let limit = 4_000_000;

  let mut sum  = 0; // the sum of all even-valued terms < limit
  let mut prev = 1; // the previous term in the sequence
  let mut curr = 2; // the current term in the sequence
  let mut next;     // the next term in the sequence

  while curr < limit {
    if curr % 2 == 0 {
      sum += curr;
    }

    next = prev + curr;
    prev = curr;
    curr = next;
  }

  return sum;
}
